How did viewing a diff between two versions of a file help you see the bug that was introduced?

- By highlighting the differences, it made it easier to see where the problem was.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

- We could easily see the differences between file versions and check where the bug code was inserted.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, 
vs having versions automatically saved, like Google docs does?

- Pros: we have a better control of the commits
- Cons: we may forget to make a commit when we should have.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

- Because in this way, modifications in separare files that are related to each other can be commited at once, making it easier to correct a bug in the future.

How can you use the commands git log and git diff to view the history of files?

- Git 'log gives' the commit history, then we can track the commits in which a file is involved and use 'git diff' to see which changes were done to that file.

How might using version control make you more confident to make changes that could break something?

- Because we can always go back to a version that was okay if we make mistakes

Now that you have your workspace set up, what do you want to try using Git for?

- On real code

What happens when you initialize a repository? Why do you need to do it?

- You tell git where your repository starts. We need to do it so that git can know from where it will keep track of things





