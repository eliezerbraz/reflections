When would you want to create remote repository rather than keeping all your work local?

- When I want to share my work with others and have them help me.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

- Because it is easier to control what I want to make public to others by manually pulling my commits.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

- fork: when I want to change a repository in GitHub but I don't have permissions to make changes to that repository.
  clone: when I want to change a repository in GitHub and I have permissions to make changes to that repository.
  branch: when I want to try out something in my project, but I do not want to make it public yet.

What is the benefit of having a copy of the last known state of the remote stored locally?

- It is easier to merge the commits done by other people.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

- Using other version control tool, like svn. It will be easier since the others could see my changes without the step of going to GitHub. It would be harder since the changes would be already commited.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

- When trying to develop or fix something that I do not want others to see yet because it is not completed. It ensures that master is always working. 
